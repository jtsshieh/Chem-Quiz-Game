{
  "version": 3,
  "sources": ["../../@mui/joy/styles/identifier.js", "../../@mui/joy/styles/styled.js", "../../@mui/joy/styles/ThemeProvider.js", "../../@mui/joy/styles/useThemeProps.js", "../../@mui/joy/styles/ColorInversion.js"],
  "sourcesContent": ["export default '$$joy';", "import { createStyled } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport THEME_ID from './identifier';\nconst styled = createStyled({\n  defaultTheme,\n  themeId: THEME_ID\n});\nexport default styled;", "import * as React from 'react';\nimport { ThemeProvider as SystemThemeProvider, useTheme as useSystemTheme } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport extendTheme from './extendTheme';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const useTheme = () => {\n  const theme = useSystemTheme(defaultTheme);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  // @ts-ignore internal logic\n  return theme[THEME_ID] || theme;\n};\nexport default function ThemeProvider({\n  children,\n  theme: themeInput\n}) {\n  let theme = defaultTheme;\n  if (themeInput) {\n    theme = extendTheme(THEME_ID in themeInput ? themeInput[THEME_ID] : themeInput);\n  }\n  return /*#__PURE__*/_jsx(SystemThemeProvider, {\n    theme: theme,\n    themeId: themeInput && THEME_ID in themeInput ? THEME_ID : undefined,\n    children: children\n  });\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useThemeProps as systemUseThemeProps } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport THEME_ID from './identifier';\nexport default function useThemeProps({\n  props,\n  name\n}) {\n  return systemUseThemeProps({\n    props,\n    name,\n    defaultTheme: _extends({}, defaultTheme, {\n      components: {}\n    }),\n    themeId: THEME_ID\n  });\n}", "import * as React from 'react';\nimport { useTheme } from './ThemeProvider';\nimport defaultTheme from './defaultTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ColorInversion = /*#__PURE__*/React.createContext(undefined);\nexport const useColorInversion = childVariant => {\n  const overridableVariants = React.useContext(ColorInversion);\n  return {\n    /**\n     * Resolve the `color` value for the component.\n     * @param {ColorPaletteProp | 'inherit' | undefined} instanceColorProp The color defined on the instance.\n     * @param {ColorPaletteProp | 'inherit' | undefined} defaultColorProp The default color to use when variant inversion is not enabled.\n     */\n    getColor: (instanceColorProp, defaultColorProp) => {\n      if (overridableVariants && childVariant) {\n        if (overridableVariants.includes(childVariant)) {\n          // @ts-ignore internal logic\n          return instanceColorProp || 'context';\n        }\n      }\n      // @ts-ignore internal logic\n      return instanceColorProp || defaultColorProp;\n    }\n  };\n};\nexport function ColorInversionProvider({\n  children,\n  variant\n}) {\n  var _theme$colorInversion;\n  const theme = useTheme();\n  return /*#__PURE__*/_jsx(ColorInversion.Provider, {\n    value: variant ?\n    // `theme` could come from other emotion/styled-components context.\n    ((_theme$colorInversion = theme.colorInversionConfig) != null ? _theme$colorInversion : defaultTheme.colorInversionConfig)[variant] : undefined,\n    children: children\n  });\n}\nexport default ColorInversion;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA,IAAO,qBAAQ;;;ACAf;AAGA,IAAM,SAAS,aAAa;AAAA,EAC1B;AAAA,EACA,SAAS;AACX,CAAC;AACD,IAAO,iBAAQ;;;ACPf,YAAuB;AACvB;AAIA,yBAA4B;AACrB,IAAM,WAAW,MAAM;AAC5B,QAAM,QAAQ,iBAAe,oBAAY;AACzC,MAAI,MAAuC;AAEzC,IAAM,oBAAc,KAAK;AAAA,EAC3B;AAGA,SAAO,MAAM,uBAAa;AAC5B;AACe,SAAR,cAA+B;AAAA,EACpC;AAAA,EACA,OAAO;AACT,GAAG;AACD,MAAI,QAAQ;AACZ,MAAI,YAAY;AACd,YAAQ,YAAY,sBAAY,aAAa,WAAW,sBAAY,UAAU;AAAA,EAChF;AACA,aAAoB,mBAAAA,KAAK,uBAAqB;AAAA,IAC5C;AAAA,IACA,SAAS,cAAc,sBAAY,aAAa,qBAAW;AAAA,IAC3D;AAAA,EACF,CAAC;AACH;;;AC7BA;AACA;AAGe,SAARC,eAA+B;AAAA,EACpC;AAAA,EACA;AACF,GAAG;AACD,SAAO,cAAoB;AAAA,IACzB;AAAA,IACA;AAAA,IACA,cAAc,SAAS,CAAC,GAAG,sBAAc;AAAA,MACvC,YAAY,CAAC;AAAA,IACf,CAAC;AAAA,IACD,SAAS;AAAA,EACX,CAAC;AACH;;;AChBA,IAAAC,SAAuB;AAGvB,IAAAC,sBAA4B;AAC5B,IAAM,iBAAoC,qBAAc,MAAS;AAC1D,IAAM,oBAAoB,kBAAgB;AAC/C,QAAM,sBAA4B,kBAAW,cAAc;AAC3D,SAAO;AAAA,IAML,UAAU,CAAC,mBAAmB,qBAAqB;AACjD,UAAI,uBAAuB,cAAc;AACvC,YAAI,oBAAoB,SAAS,YAAY,GAAG;AAE9C,iBAAO,qBAAqB;AAAA,QAC9B;AAAA,MACF;AAEA,aAAO,qBAAqB;AAAA,IAC9B;AAAA,EACF;AACF;AACO,SAAS,uBAAuB;AAAA,EACrC;AAAA,EACA;AACF,GAAG;AACD,MAAI;AACJ,QAAM,QAAQ,SAAS;AACvB,aAAoB,oBAAAC,KAAK,eAAe,UAAU;AAAA,IAChD,OAAO,YAEL,wBAAwB,MAAM,yBAAyB,OAAO,wBAAwB,qBAAa,sBAAsB,WAAW;AAAA,IACtI;AAAA,EACF,CAAC;AACH;AACA,IAAO,yBAAQ;",
  "names": ["_jsx", "useThemeProps", "React", "import_jsx_runtime", "_jsx"]
}
